/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Panel;

import Controllers.KeywordControl;
import Model.Keyword;
import java.awt.Color;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class pnlKeyword extends javax.swing.JPanel {
    private String selectedId = "";
    /**
     * Creates new form pnlKeyword
     */
    public pnlKeyword() {
        initComponents();
        turnOff(btnDelete);
        turnOff(btnUpdate);
        refresh();
        
        keywordTbl.setOpaque(true);
        keywordTbl.setFillsViewportHeight(true);
        
        keywordTbl.setShowGrid(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        keywordTbl = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtKeyword = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        responseTextArea = new javax.swing.JTextArea();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();

        keywordTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        keywordTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                keywordTblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(keywordTbl);

        jLabel1.setText("Keyword");

        jLabel2.setText("Response");

        responseTextArea.setColumns(20);
        responseTextArea.setRows(5);
        jScrollPane2.setViewportView(responseTextArea);

        btnDelete.setText("Delete");
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteMouseClicked(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateMouseClicked(evt);
            }
        });

        btnAdd.setText("ADD");
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtKeyword)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDelete)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAdd))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtKeyword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate)
                    .addComponent(btnAdd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseClicked
        // TODO add your handling code here:
        if (!selectedId.equals("")) {
            KeywordControl keywordControl = new KeywordControl();
            keywordControl.destroy(selectedId);
            selectedId = "";
            turnOff(btnDelete);
            turnOff(btnUpdate);
            btnAdd.setBackground(new Color(0, 204, 51));
            clearForm();
            refresh();
        } else {
            // code here
        }
    }//GEN-LAST:event_btnDeleteMouseClicked

    private void btnUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseClicked
        // TODO add your handling code here:
        if(!selectedId.equals("")) {
            String keyword = txtKeyword.getText();
            String response = responseTextArea.getText();
            
            boolean isKeywordFilled = !keyword.equals("");
            boolean isResponseFilled = !response.equals("");
            
            if (isKeywordFilled && isResponseFilled) {
                KeywordControl keywordControl = new KeywordControl();
                Keyword newKeyword = new Keyword(selectedId, keyword, response);
                if(keywordControl.update(newKeyword)) {
                    selectedId = "";
                    clearForm();
                    turnOff(btnDelete);
                    turnOff(btnUpdate);
                    btnAdd.setBackground(new Color(0, 204, 51));
                    refresh();    
                }
           } else {
                // do nothing
            }
        }
    }//GEN-LAST:event_btnUpdateMouseClicked

    private void btnAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseClicked
        // TODO add your handling code here:
        if (selectedId.equals("")) {
            String keyword = txtKeyword.getText();
            String response = responseTextArea.getText();
            
            boolean isKeywordFilled = !keyword.equals("");
            boolean isResponseFilled = !response.equals("");
            
            if (isKeywordFilled && isResponseFilled) {
                KeywordControl keywordControl = new KeywordControl();
                Keyword newKeyword = new Keyword(keyword, response);
                if (keywordControl.store(newKeyword)) {
                    clearForm();
                    refresh();
                    selectedId = "";
                } 
           } else {
                // code here
            }
        } else {
            selectedId = "";

            btnAdd.setBackground(new Color(0, 204, 51));

            turnOff(btnDelete);
            turnOff(btnUpdate);

            txtKeyword.setText("");
            responseTextArea.setText("");   
        }
    }//GEN-LAST:event_btnAddMouseClicked

    private void keywordTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_keywordTblMouseClicked
        // TODO add your handling code here:
        try {
            int row = keywordTbl.getSelectedRow();
            selectedId = "" + keywordTbl.getValueAt(row, 0);
            
            turnOff(btnAdd);
        
            btnDelete.setBackground(new Color(255,51,51));
            btnUpdate.setBackground(new Color(204,204,0));

            String keyword = "" + keywordTbl.getValueAt(row, 1);
            String response = "" + keywordTbl.getValueAt(row, 2);

            txtKeyword.setText(keyword);
            responseTextArea.setText(response);
        } catch (Exception e) {
            clearForm();
            selectedId = "";
            turnOff(btnDelete);
            turnOff(btnUpdate);
            btnAdd.setBackground(new Color(0, 204, 51));
        }
    }//GEN-LAST:event_keywordTblMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable keywordTbl;
    private javax.swing.JTextArea responseTextArea;
    private javax.swing.JTextField txtKeyword;
    // End of variables declaration//GEN-END:variables

    public void refresh() {
        Object[][] dataTable = null;
        String[] HEADER = {"Id", "Keyword", "Response"};
        int columnSize = HEADER.length;
        
        KeywordControl keywordControl = new KeywordControl();
        List<Keyword> listKeyword = keywordControl.index();
        int baris = listKeyword.size();
        dataTable = new Object[baris][columnSize];
        
        for(int i = 0; i < baris; i++) {
            Keyword keyword = listKeyword.get(i);
            dataTable[i][0] = keyword.getId();
            dataTable[i][1] = keyword.getKeyword();
            dataTable[i][2] = keyword.getResponse();
        }
        
        keywordTbl.setModel(new DefaultTableModel(dataTable, HEADER));
    }
    
    public void turnOff(JButton jPanel) {
        jPanel.setBackground(new Color(43,43,43));
    }
    
    public void clearForm() {
        txtKeyword.setText("");
        responseTextArea.setText("");
    }
}
